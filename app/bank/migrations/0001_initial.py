# Generated by Django 3.2.4 on 2021-09-06 23:59

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AnalysisStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed_all_steps', models.BooleanField(verbose_name='COMPLETED_ALL_STEPS')),
                ('failed_steps', models.TextField(null=True)),
                ('steps_not_executed', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DNAExpandedMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_pf_reads', models.FloatField(null=True)),
                ('mean_family_size', models.FloatField(null=True)),
                ('median_target_coverage', models.FloatField(null=True)),
                ('pct_chimeric_reads', models.FloatField(null=True)),
                ('pct_exon_100x', models.FloatField(null=True)),
                ('pct_read_enrichment', models.FloatField(null=True)),
                ('pct_usable_umi_reads', models.FloatField(null=True)),
                ('mean_target_coverage', models.FloatField(null=True)),
                ('pct_aligned_reads', models.FloatField(null=True)),
                ('pct_contamination_est', models.FloatField(null=True)),
                ('pct_pf_uq_reads', models.FloatField(null=True)),
                ('pct_target_0_dot_4x_mean', models.FloatField(null=True)),
                ('pct_target_100x', models.FloatField(null=True)),
                ('pct_target_250x', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DNAExpandedMetricsRanges',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lsl_total_pf_reads', models.FloatField(null=True)),
                ('lsl_mean_family_size', models.FloatField(null=True)),
                ('lsl_median_target_coverage', models.FloatField(null=True)),
                ('lsl_pct_chimeric_reads', models.FloatField(null=True)),
                ('lsl_pct_exon_100x', models.FloatField(null=True)),
                ('lsl_pct_read_enrichment', models.FloatField(null=True)),
                ('lsl_pct_usable_umi_reads', models.FloatField(null=True)),
                ('lsl_mean_target_coverage', models.FloatField(null=True)),
                ('lsl_pct_aligned_reads', models.FloatField(null=True)),
                ('lsl_pct_contamination_est', models.FloatField(null=True)),
                ('lsl_pct_pf_uq_reads', models.FloatField(null=True)),
                ('lsl_pct_target_0_dot_4x_mean', models.FloatField(null=True)),
                ('lsl_pct_target_100x', models.FloatField(null=True)),
                ('lsl_pct_target_250x', models.FloatField(null=True)),
                ('usl_total_pf_reads', models.FloatField(null=True)),
                ('usl_mean_family_size', models.FloatField(null=True)),
                ('usl_median_target_coverage', models.FloatField(null=True)),
                ('usl_pct_chimeric_reads', models.FloatField(null=True)),
                ('usl_pct_exon_100x', models.FloatField(null=True)),
                ('usl_pct_read_enrichment', models.FloatField(null=True)),
                ('usl_pct_usable_umi_reads', models.FloatField(null=True)),
                ('usl_mean_target_coverage', models.FloatField(null=True)),
                ('usl_pct_aligned_reads', models.FloatField(null=True)),
                ('usl_pct_contamination_est', models.FloatField(null=True)),
                ('usl_pct_pf_uq_reads', models.FloatField(null=True)),
                ('usl_pct_target_0_dot_4x_mean', models.FloatField(null=True)),
                ('usl_pct_target_100x', models.FloatField(null=True)),
                ('usl_pct_target_250x', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DNALibraryQCMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contamination_score', models.FloatField(null=True)),
                ('contamination_p_value', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DNALibraryQCMetricsforCNV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coverage_mad', models.FloatField(null=True)),
                ('median_bin_count_cnv_target', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DNALibraryQCMetricsforCNVRanges',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lsl_coverage_mad', models.FloatField(null=True)),
                ('usl_coverage_mad', models.FloatField(null=True)),
                ('lsl_median_bin_count_cnv_target', models.FloatField(null=True)),
                ('usl_median_bin_count_cnv_target', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DNALibraryQCMetricsforMSI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usable_msi_sites', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DNALibraryQCMetricsforMSIRanges',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lsl_usable_msi_sites', models.FloatField(null=True)),
                ('usl_usable_msi_sites', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DNALibraryQCMetricsforSmallVariantCallingandTMB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('median_insert_size', models.FloatField(null=True)),
                ('median_exon_coverage', models.FloatField(null=True)),
                ('pct_exon_50x', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DNALibraryQCMetricsforSmallVariantCallingandTMBRanges',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lsl_median_insert_size', models.FloatField(null=True)),
                ('usl_median_insert_size', models.FloatField(null=True)),
                ('lsl_median_exon_coverage', models.FloatField(null=True)),
                ('usl_median_exon_coverage', models.FloatField(null=True)),
                ('lsl_pct_exon_50x', models.FloatField(null=True)),
                ('usl_pct_exon_50x', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DNALibraryQCMetricsRanges',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lsl_contamination_score', models.FloatField(null=True)),
                ('usl_contamination_score', models.FloatField(null=True)),
                ('lsl_contamination_p_value', models.FloatField(null=True)),
                ('usl_contamination_p_value', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lab',
            fields=[
                ('name', models.TextField(primary_key=True, serialize=False)),
                ('location', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('name', models.TextField(primary_key=True, serialize=False)),
                ('machine_type', models.TextField()),
                ('lab', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='samples.lab')),
            ],
        ),
        migrations.CreateModel(
            name='RNAExpandedMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pct_chimeric_reads', models.FloatField(null=True)),
                ('pct_on_target_reads', models.FloatField(null=True)),
                ('scaled_median_gene_coverage', models.FloatField(null=True)),
                ('total_pf_reads', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RNAExpandedMetricsRanges',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lsl_pct_chimeric_reads', models.FloatField(null=True)),
                ('lsl_pct_on_target_reads', models.FloatField(null=True)),
                ('lsl_scaled_median_gene_coverage', models.FloatField(null=True)),
                ('lsl_total_pf_reads', models.FloatField(null=True)),
                ('usl_pct_chimeric_reads', models.FloatField(null=True)),
                ('usl_pct_on_target_reads', models.FloatField(null=True)),
                ('usl_scaled_median_gene_coverage', models.FloatField(null=True)),
                ('usl_total_pf_reads', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RNALibraryQCMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('median_cv_gene_500x', models.FloatField(null=True)),
                ('total_on_target_reads', models.FloatField(null=True)),
                ('median_insert_size', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RNALibraryQCMetricsRanges',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lsl_median_cv_gene_500x', models.FloatField(null=True)),
                ('usl_median_cv_gene_500x', models.FloatField(null=True)),
                ('lsl_total_on_target_reads', models.FloatField(null=True)),
                ('usl_total_on_target_reads', models.FloatField(null=True)),
                ('lsl_median_insert_size', models.FloatField(null=True)),
                ('usl_median_insert_size', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Run',
            fields=[
                ('name', models.TextField(primary_key=True, serialize=False)),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='samples.machine')),
            ],
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('run', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='samples.run')),
            ],
        ),
        migrations.CreateModel(
            name='TSO500RunMetricsRanges',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lsl_pct_pf_reads', models.FloatField(null=True)),
                ('usl_pct_pf_reads', models.FloatField(null=True)),
                ('lsl_q30_r1', models.FloatField(null=True)),
                ('usl_q30_r2', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TSO500SampleMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analysis_status', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='samples.analysisstatus')),
                ('dna_expanded_metrics', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='samples.dnaexpandedmetrics')),
                ('dna_library_qc_metrics', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='samples.dnalibraryqcmetrics')),
                ('dna_library_qc_metrics_for_cnv', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='samples.dnalibraryqcmetricsforcnv')),
                ('dna_library_qc_metrics_for_msi', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='samples.dnalibraryqcmetricsformsi')),
                ('dna_library_qc_metrics_for_small_variant_calling_and_tmb', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='samples.dnalibraryqcmetricsforsmallvariantcallingandtmb')),
                ('rna_expanded_metrics', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='samples.rnaexpandedmetrics')),
                ('rna_library_qc_metrics', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='samples.rnalibraryqcmetrics')),
                ('sample', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='samples.sample')),
            ],
        ),
        migrations.CreateModel(
            name='TSO500RunMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('output_date', models.DateField(verbose_name='Ouptput Time')),
                ('output_time', models.TimeField(verbose_name='Output Date')),
                ('workflow_version', models.TextField()),
                ('run_metrics', models.TextField(blank=True)),
                ('pct_pf_reads', models.FloatField()),
                ('pct_q30_r1', models.FloatField()),
                ('pct_q30_r2', models.FloatField()),
                ('applicationversion', models.TextField()),
                ('rtaversion', models.TextField()),
                ('runnumber', models.IntegerField()),
                ('flowcellserial', models.TextField()),
                ('pr2bottleserial', models.TextField()),
                ('reagentkitserial', models.TextField()),
                ('read1', models.IntegerField()),
                ('read2', models.IntegerField()),
                ('index1read', models.IntegerField()),
                ('index2read', models.IntegerField()),
                ('run', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='samples.run')),
                ('tso500_run_metrics_ranges', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.tso500runmetricsranges')),
            ],
        ),
        migrations.CreateModel(
            name='ThermoFisherSampleMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='samples.sample')),
            ],
        ),
        migrations.CreateModel(
            name='ThermoFisherRunMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('run', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='samples.run')),
            ],
        ),
        migrations.AddField(
            model_name='rnalibraryqcmetrics',
            name='rna_library_qc_metrics_ranges',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.rnalibraryqcmetricsranges'),
        ),
        migrations.AddField(
            model_name='rnaexpandedmetrics',
            name='rna_expanded_metrics_ranges',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.rnaexpandedmetricsranges'),
        ),
        migrations.AddField(
            model_name='dnalibraryqcmetricsforsmallvariantcallingandtmb',
            name='dna_library_qc_metrics_for_small_variant_calling_and_tmb_ranges',
            field=models.ForeignKey(db_column='dna_library_small_variant_and_tmb_ranges', on_delete=django.db.models.deletion.PROTECT, to='samples.dnalibraryqcmetricsforsmallvariantcallingandtmbranges'),
        ),
        migrations.AddField(
            model_name='dnalibraryqcmetricsformsi',
            name='dna_library_qc_metrics_for_msi_ranges',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.dnalibraryqcmetricsformsiranges'),
        ),
        migrations.AddField(
            model_name='dnalibraryqcmetricsforcnv',
            name='dna_library_qc_metrics_for_cnv_ranges',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.dnalibraryqcmetricsforcnvranges'),
        ),
        migrations.AddField(
            model_name='dnalibraryqcmetrics',
            name='dna_library_qc_metrics_ranges',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.dnalibraryqcmetricsranges'),
        ),
        migrations.AddField(
            model_name='dnaexpandedmetrics',
            name='dna_expanded_metrics_ranges',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.dnaexpandedmetricsranges'),
        ),
    ]
